C51 COMPILER V7.09   LC1602                                                                09/16/2011 03:31:17 PAGE 1   


C51 COMPILER V7.09, COMPILATION OF MODULE LC1602
OBJECT MODULE PLACED IN LC1602.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE LC1602.c DEBUG OBJECTEXTEND

line level    source

   1          /**************************************************************************
   2           * EVB900A-V1开发板实验程序                                              *
   3           * 版本： (C) Copyright 2010,SC.etc,DCL,CHM    All Rights reserved.      *
   4           * 网站： mcuep.taobao.com                            *
   5           * 邮箱： dcl0@sina.com                                                  *
   6           * 作者： DCL,CHM
   7           * 来源： 思创电子  Xa' STrong ELECTRONICS CO.,LTD      *
   8           *【版权】Copyright(A) 思创电子 mcuep.taobao.com  All Rights Reserved    *
   9           *【声明】此程序仅用于学习与参考，引用请注明版权和作者信息！             *
  10           *************************************************************************/
  11          
  12          #include "C8051F340.H"     //调用头文件（单片机内部的寄存器定义）
  13          /******本段为硬件I/O口定义********/
  14          
  15          sbit LCM_RS       =   P0^2; //1602LCD管脚定义
  16          sbit LCM_RW       =   P1^3; //1602LCD管脚定义
  17          sbit LCM_E        =   P1^4; //1602LCD管脚定义
  18          
  19          
  20          #define  LCD_DATA   P1   //LCD DATA
  21          #define  LCD_BUSY   0x80 // 用于检测LCD的BUSY标识（本程序中用的延时，未检测） 
  22          //延时
  23          void Delay1(void)
  24          {
  25   1       unsigned int TempCyc = 100;
  26   1       while(TempCyc--);
  27   1      }
  28          
  29          //5ms延时
  30          void Delay5Ms(void)
  31          {
  32   1       unsigned int TempCyc = 5552;
  33   1       while(TempCyc--);
  34   1      }
  35          
  36          //400ms延时
  37          void Delay400Ms(void)
  38          {
  39   1       unsigned char TempCycA = 5;
  40   1       unsigned int TempCycB;
  41   1       while(TempCycA--)
  42   1       {
  43   2        TempCycB=7269;
  44   2        while(TempCycB--);
  45   2       };
  46   1      }
  47          
  48          //读数据
  49          unsigned char ReadDataLCM(void)
  50          {unsigned char tmp;
  51   1       //P4=0x1f;
  52   1       LCM_E =0;
  53   1       LCM_RW=0;
  54   1       LCM_RS=0;
  55   1      // P4=0x3f;
C51 COMPILER V7.09   LC1602                                                                09/16/2011 03:31:17 PAGE 2   

  56   1       LCM_E =0;
  57   1       LCM_RW=0;
  58   1       LCM_RS=1;
  59   1      
  60   1       //P4=0x7f;
  61   1       LCM_E =0;
  62   1       LCM_RW=1;
  63   1       LCM_RS=1;
  64   1       //P4=0xff;
  65   1       LCM_E =1;
  66   1       LCM_RW=1;
  67   1       LCM_RS=1;
  68   1       Delay1(); Delay1();
  69   1       //LCM_E = 0;
  70   1       //LCM_E = 1;
  71   1       tmp=LCD_DATA;
  72   1       //P4=0x1f;
  73   1       LCM_E =0;
  74   1       LCM_RW=0;
  75   1       LCM_RS=0;
  76   1       return(tmp);
  77   1       
  78   1      }
  79          
  80          //读状态
  81          unsigned char ReadStatusLCM(void)
  82          {unsigned char tmp;
  83   1       LCD_DATA = 0xFF;
  84   1      
  85   1       //P4=0x1f;
  86   1       LCM_E =0;
  87   1       LCM_RW=0;
  88   1       LCM_RS=0;
  89   1       //P4=0x5f;
  90   1       LCM_E =0;
  91   1       LCM_RW=1;
  92   1       LCM_RS=0;
  93   1       //P4=0xdf;
  94   1       LCM_E =1;
  95   1       LCM_RW=1;
  96   1       LCM_RS=0;
  97   1       Delay1(); Delay1();
  98   1        
  99   1       while (LCD_DATA & LCD_BUSY); //检测忙信号 
 100   1       tmp=LCD_DATA;
 101   1       //P4=0x1f;
 102   1       LCM_E =0;
 103   1       LCM_RW=0;
 104   1       LCM_RS=0;
 105   1       return(tmp);
 106   1       
 107   1      }
 108          
 109          
 110          //写数据
 111          void WriteDataLCM(unsigned char WDLCM)
 112          {
 113   1       ReadStatusLCM(); //检测忙
 114   1       LCD_DATA = WDLCM;
 115   1       //P4=0x1f;
 116   1       LCM_E =0;
 117   1       LCM_RW=0;
C51 COMPILER V7.09   LC1602                                                                09/16/2011 03:31:17 PAGE 3   

 118   1       LCM_RS=0;
 119   1       //P4=0x3f;
 120   1       LCM_E =0;
 121   1       LCM_RW=0;
 122   1       LCM_RS=1;
 123   1       //P4=0xbf;
 124   1       LCM_E =1;
 125   1       LCM_RW=0;
 126   1       LCM_RS=1;
 127   1       Delay1(); Delay1();
 128   1      
 129   1       //P4=0x1f;
 130   1       LCM_E =0;
 131   1       LCM_RW=0;
 132   1       LCM_RS=0;
 133   1      }
 134          
 135          //写指令
 136          void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
 137          {
 138   1       if (BuysC) ReadStatusLCM(); //根据需要检测忙
 139   1       LCD_DATA = WCLCM;
 140   1       //P4=0x1f;
 141   1       LCM_E =0;
 142   1       LCM_RW=0;
 143   1       LCM_RS=0;
 144   1       //P4=0x9f;
 145   1       LCM_E =1;
 146   1       LCM_RW=0;
 147   1       LCM_RS=0;
 148   1       Delay1(); Delay1();
 149   1       //P4=0x1f;
 150   1       LCM_E =0;
 151   1       LCM_RW=0;
 152   1       LCM_RS=0;
 153   1      } 
 154          
 155          void LCMInit_1602(void) //LCM初始化
 156          {
 157   1       LCD_DATA = 0;
 158   1       Delay5Ms();
 159   1       Delay5Ms();
 160   1       Delay5Ms();
 161   1       Delay5Ms();
 162   1       WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
 163   1       Delay5Ms();
 164   1       WriteCommandLCM(0x38,0);
 165   1       Delay5Ms();
 166   1       WriteCommandLCM(0x38,0);
 167   1       Delay5Ms();
 168   1       WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
 169   1       WriteCommandLCM(0x08,1); //关闭显示
 170   1       WriteCommandLCM(0x01,1); //显示清屏
 171   1       WriteCommandLCM(0x06,1); // 显示光标移动设置
 172   1       WriteCommandLCM(0x0C,1); // 显示开及光标设置
 173   1      }
 174          
 175          //按指定位置显示一个字符
 176          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
 177          {
 178   1       Y &= 0x1;
 179   1       X &= 0xF; //限制X不能大于15，Y不能大于1
C51 COMPILER V7.09   LC1602                                                                09/16/2011 03:31:17 PAGE 4   

 180   1       if (Y) X |= 0x40; //当要显示第二行时地址码+0x40;
 181   1       X |= 0x80; // 算出指令码
 182   1       WriteCommandLCM(X, 0); //这里不检测忙信号，发送地址码
 183   1       WriteDataLCM(DData);
 184   1      }
 185          
 186          //按指定位置显示一串字符
 187          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char len, unsigned char *DData)
 188          {
 189   1       unsigned char ListLength;
 190   1      
 191   1       Y &= 0x01;
 192   1       X &= 0x0F; //限制X不能大于15，Y不能大于1
 193   1       for (ListLength=0;ListLength<len;ListLength++) //若到达字串尾则退出
 194   1        {
 195   2         if (X <= 0x0F) //X坐标应小于0xF
 196   2          {
 197   3           DisplayOneChar(X, Y, DData[ListLength]); //显示单个字符
 198   3           //ListLength++;
 199   3           X++;
 200   3          }
 201   2        }
 202   1      }
 203          
 204          
 205          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
